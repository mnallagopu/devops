pipeline 
 {
agent any
stages
{
    stage('Azure Login') 
    {
        steps 
        {
            withCredentials([azureServicePrincipal(clientIdVariable: 'MY_AZURE_CLIENT_ID', clientSecretVariable: 'MY_AZURE_CLIENT_SECRET', credentialsId: 'MyNewAzureServicePrincipal', subscriptionIdVariable: 'MY_AZURE_SUBSCRIPTION_ID', tenantIdVariable: 'MY_AZURE_TENANT_ID'), ]) 
            {
                script
                {
                    sh'az login --service-principal --username ${MY_AZURE_CLIENT_ID} --tenant ${MY_AZURE_TENANT_ID}  --password ${MY_AZURE_CLIENT_SECRET}'
                }
            }
        }
    }
    stage('Create a resource group') 
    {
        steps 
        {
            withCredentials([azureServicePrincipal(clientIdVariable: 'MY_AZURE_CLIENT_ID', clientSecretVariable: 'MY_AZURE_CLIENT_SECRET', credentialsId: 'MyNewAzureServicePrincipal', subscriptionIdVariable: 'MY_AZURE_SUBSCRIPTION_ID', tenantIdVariable: 'MY_AZURE_TENANT_ID'), ]) 
            {
                script
                {
                    sh'az group create --name ${RESOURCEGROUP} --location ${LOCATION}'
                }
            }
        }
    }

    stage('Create a virtual network') 
    {
        steps 
        {
            withCredentials([azureServicePrincipal(clientIdVariable: 'MY_AZURE_CLIENT_ID', clientSecretVariable: 'MY_AZURE_CLIENT_SECRET', credentialsId: 'MyNewAzureServicePrincipal', subscriptionIdVariable: 'MY_AZURE_SUBSCRIPTION_ID', tenantIdVariable: 'MY_AZURE_TENANT_ID'), ]) 
            {
                script
                {
                    sh'az network vnet create --resource-group ${RESOURCEGROUP} --name aro-vnet --address-prefixes 10.0.0.0/22'
                }
            }
        }
    }

    stage('Add an empty subnet for the master nodes') 
    {
        steps 
        {
            withCredentials([azureServicePrincipal(clientIdVariable: 'MY_AZURE_CLIENT_ID', clientSecretVariable: 'MY_AZURE_CLIENT_SECRET', credentialsId: 'MyNewAzureServicePrincipal', subscriptionIdVariable: 'MY_AZURE_SUBSCRIPTION_ID', tenantIdVariable: 'MY_AZURE_TENANT_ID'), ]) 
            {
                script
                {
                    sh'az network vnet subnet create --resource-group ${RESOURCEGROUP} --vnet-name aro-vnet --name master-subnet --address-prefixes 10.0.0.0/23 --service-endpoints Microsoft.ContainerRegistry'
                }
            }
        }
    }

    stage('Add an empty subnet for the worker nodes') 
    {
        steps 
        {
            withCredentials([azureServicePrincipal(clientIdVariable: 'MY_AZURE_CLIENT_ID', clientSecretVariable: 'MY_AZURE_CLIENT_SECRET', credentialsId: 'MyNewAzureServicePrincipal', subscriptionIdVariable: 'MY_AZURE_SUBSCRIPTION_ID', tenantIdVariable: 'MY_AZURE_TENANT_ID'), ]) 
            {
                script
                {
                    sh'az network vnet subnet create --resource-group ${RESOURCEGROUP} --vnet-name aro-vnet --name worker-subnet --address-prefixes 10.0.2.0/23 --service-endpoints Microsoft.ContainerRegistry'
                }
            }
        }
    }

    stage('Disable subnet private endpoint policies') 
    {
        steps 
        {
            withCredentials([azureServicePrincipal(clientIdVariable: 'MY_AZURE_CLIENT_ID', clientSecretVariable: 'MY_AZURE_CLIENT_SECRET', credentialsId: 'MyNewAzureServicePrincipal', subscriptionIdVariable: 'MY_AZURE_SUBSCRIPTION_ID', tenantIdVariable: 'MY_AZURE_TENANT_ID'), ]) 
            {
                script
                {
                    sh'az network vnet subnet update --name master-subnet --resource-group ${RESOURCEGROUP} --vnet-name aro-vnet --disable-private-link-service-network-policies true'
                }
            }
        }
    }

    stage('Create the cluster') 
    {
        steps 
        {
            withCredentials([azureServicePrincipal(clientIdVariable: 'MY_AZURE_CLIENT_ID', clientSecretVariable: 'MY_AZURE_CLIENT_SECRET', credentialsId: 'MyNewAzureServicePrincipal', subscriptionIdVariable: 'MY_AZURE_SUBSCRIPTION_ID', tenantIdVariable: 'MY_AZURE_TENANT_ID'), ]) 
            {
                script
                {
                    sh'az aro create --resource-group ${RESOURCEGROUP} --name ${CLUSTER} --vnet aro-vnet --master-subnet master-subnet --worker-subnet worker-subnet --pull-secret @/var/lib/jenkins/workspace/aro_pull_secret.txt'
                }
            }
        }
    }
}
}
